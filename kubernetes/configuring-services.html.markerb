---
title: Configuring Services
layout: docs
toc: false
nav: firecracker
---

<div class= "important icon">
Fly Kubernetes is a closed beta. Email us at sales@fly.io for early access.
</div>

A [Kubernetes Service](https://kubernetes.io/docs/concepts/services-networking/service/) exposes applications running on your cluster.
Fly Kubernetes supports ClusterIP and LoadBalancer Services.

Using `kubectl`, we can create a Service. An example ClusterIP service

```yaml
apiVersion: v1
kind: Service
metadata:
  name: fksdemo-service
spec:
  selector:
    app: fksdemo
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
```

to create it, execute the command

```
kubectl apply -f service.yaml
```

## Fly.io connection Handlers

Our platform supports a number of connection handlers. These are a sort of middleware that modify your connection before it reaches your application.
More details on the available handlers can be found in our [documentation](https://fly.io/docs/networking/services/#connection-handlers). Connection
handlers are supported via custom annotations to a Service object. The annotations have the form

```yaml
"service.fly.io/<exposed port name/number>-handlers": "<handler1,handler2,...handlerN>"
```

The example below adds an HTTP and TLS handler to the port 443.

```yaml
apiVersion: v1
kind: Service
metadata:
  name: fksdemo-service
  annotations:
    "service.fly.io/https-handlers": "http,tls" # can replace https with 443
spec:
  selector:
    app: fksdemo
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8080
```

## Not supported

We currently do not support:

* NodePort Services
* UDP protocol

## Related topics

- [FKS Quickstart](/docs/kubernetes/fks-quickstart/)
